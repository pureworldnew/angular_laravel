@extends('app')

@section('content')
<style>
    #confirmNavBox {
        margin-top: 200px;
    }

    #paymentBox input[type=text],
    #paymentBox select {
        margin-top: 10px;
    }

    .paymentMethods li {
        list-style: none;
    }

    #klarna-checkout-container {
        display: none;
    }

    #billing-form span.error {
        display: none;
        color: red;
    }

    #card-element {
        border: 2px solid #f0ad4e;
        padding: 10px;
        border-radius: 6px;
        margin-bottom: 16px;
    }
</style>
<div class="row">
    <div class="col-xs-12 col-sm-10-4 col-md-6 contentBoxHolder">
        <div id="paymentBox" class="contentBox">
            @include("partials.bookingBreadcrumbs")

            {!! Form::open(array('url' => '/booking/confirmation', "id" => "billing-form")) !!}

            @if(!$centre->klarna_only)
            <div class="form-group hidden">
                <h3>{{ trans('booking/pay.customerType') }}</h3>
                <input id="customerTypeIndividual" type="radio" name="customerType" value="2" checked>
                {{ trans('booking/pay.customerTypeIndividual') }}
                <input id="customerTypeCompany" type="radio" name="customerType" value="1">
                {{ trans('booking/pay.customerTypeCompany') }}
            </div>

            @if(sizeof($paymentMethods) == 0)
            <h2 style="color:red">{{ trans('booking/pay.noPaymentMethodsHead') }}</h2>
            <p>{{ trans('booking/pay.noPaymentMethodsText') }}</p>
            @elseif(sizeof($paymentMethods) ==1)
            <ul class="paymentMethods hidden">
                @foreach($paymentMethods as $method)
                <li><label
                        class="radio-inline">{{ Form::radio('paymentMethod', $method->shortName, true, array('class' => 'paymentMethod', 'id' => 'paymentMethod'.$method->shortName)) }}
                        {{ trans('booking/pay.payment'.$method->shortName) }}</label></li>
                @endforeach
            </ul>
            @else
            <h3>{{ trans('booking/pay.paymentMethodHeading') }}</h3>
            <ul class="paymentMethods">
                @foreach($paymentMethods as $method)
                <li><label
                        class="radio-inline">{{ Form::radio('paymentMethod', $method->shortName, false, array('checked' => true, 'class' => 'paymentMethod', 'id' => 'paymentMethod'.$method->shortName)) }}
                        {{ trans('booking/pay.payment'.$method->shortName) }}</label></li>
                @if($method->shortName == 'Transfer')
                <p id="paymentTransferHow" class="paymentHow" style="display:none">{{ $paymentTransferHow }}</p>
                @elseif($method->shortName == 'Cash')
                <p id="paymentCashHow" class="paymentHow" style="display:none">{{ $paymentCashHow }}</p>
                @elseif($method->shortName == 'Invoice')
                <p id="paymentInvoiceHow" class="paymentHow" style="display:none">{{ $paymentInvoiceHow }}</p>
                @endif
                @endforeach
            </ul>
            @endif
            @endif
            <h3 class="addressDetails">{{ trans('booking/pay.customerDetails') }}: </h3>
            <div id="billing_name" class="form-group">
                <label for="name">{{ trans('booking/pay.name') }}:</label>
                <input value="{{ $booking->name }}" name="name" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.name') }}"><br>
            </div>

            <div id="billing_email" class="form-group">
                <label for="name">{{ trans('booking/pay.billingEmail') }}:</label>
                <input value="{{ $booking->billing_email }}" name="billing_email" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.billingEmail') }}"><br>
            </div>

            <div class="form-group addressDetails">
                <label for="exampleInputEmail1">{{ trans('booking/pay.address') }}:</label><BR>
                <input name="address" value="{{ $booking->billing_address }}" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.yourAddress') }}"><BR>
                <input name="address" value="{{ $booking->billing_address2 }}" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.yourAddress2') }}"><BR>
                <input name="city" value="{{ $booking->billing_city }}" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.city') }}"><BR>
                <input name="post_code" value="{{ $booking->billing_post_code }}" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.postcode') }}"><BR>
                {{ Form::select('country', array('1' => trans('booking/pay.sweden'), '2' => trans('booking/pay.germany')), null, array('class' => 'form-control input')) }}<br>
                <input name="phone" value="{{ $booking->billing_phone }}" type="text" class="form-control input"
                    placeholder="{{ trans('booking/pay.phone') }}"><BR>

            </div>

            @include("booking.partials.stripe")



            {{--<div class="form-group">
                        <h3>{{ trans('booking/pay.confirmationTo') }}:</h3>
            <label class="checkbox-inline">
                <input type="checkbox"> {{ trans('booking/pay.epost') }}
            </label>
            <label class="checkbox-inline">
                <input type="checkbox"> {{ trans('booking/pay.sms') }}
            </label>
        </div>
        <div class="form-group">
            <label class="checkbox-inline">
                <input type="checkbox"> {{ trans('booking/pay.moreInfo') }}
            </label>
        </div>--}}
        {{--<p>
                        {!! Form::open(array('url' => 'booking/confirmation', 'method' => 'get')) !!}
                        {!! Form::submit(trans('booking/pay.doPayment'), array('class' => 'btn btn-danger')) !!}
                        {!! Form::close() !!}
                    </p>--}}


        {{--{!! Form::submit(trans('booking/confirm.confirmSend'), ['ng-click' => 'submitStripe($event)', 'ng-value' => 'submitStripeButtonText', 'ng-disabled' => 'disableStripeButton', 'class' => 'shopButton']) !!}--}}

        {!! Form::submit(trans('booking/confirm.confirmSend'), ['class' => 'btn btn-warning', 'id' => 'submitPay']) !!}

        {!! Form::close() !!}
    </div>
</div>
</div>
<div class="row">
    <div class="col-sm-12 contentBoxHolder">
        {!! $klarnaSnippet !!}
    </div>
</div>

@include('booking.partials.stripe')

@endsection

@section('meta')
<meta name="publishable-key" content="{{ $centreStripePublicKey }}">
@endsection

@section('footerFirst')
<script src="/js/StripeBilling.js"></script>

<!--script type="text/javascript" src="https://js.stripe.com/v2/"></script-->
<script type="text/javascript" src="https://js.stripe.com/v3/"></script>
@endsection

@section('footer')

<script>
    $(document).ready(function(){
            var klarnaPayment = false;
            var stripePayment = false;
            var tokenValue = "{{ $centreStripePublicKey }}";
            var publicKey = "{{ $centreStripePublicKey }}";
            var secretKey = "{{ $centreStripeSecretKey }}";
            var totalPrice = "{{ $totalPrice }}";
            var currency = "{{ $currency }}";
            var stripe = Stripe(tokenValue);
            // window.stripe = stripe;
            var elements = stripe.elements();
            var style = {
                base: {
                    color: '#32325d',
                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                    fontSmoothing: 'antialiased',
                    fontSize: '16px',
                    '::placeholder': {
                    color: '#aab7c4'
                    }
                },
                invalid: {
                    color: '#fa755a',
                    iconColor: '#fa755a'
                }
            };
            var cardElement = elements.create('card', {style: style});
            window.cardElement = cardElement;

            cardElement.mount('#card-element');

            $('#paymentMethodTransfer').click(function(){
                $('.paymentHow').hide();
                $('#paymentTransferHow').toggle();
            });
            $('#paymentMethodCash').click(function(){
                $('.paymentHow').hide();
                $('#paymentCashHow').toggle();
            });
            $('#paymentMethodInvoice').click(function(){
                $('.paymentHow').hide();
                $('#paymentInvoiceHow').toggle();
            });

            function noKlarnaPayment()
            {
                $("#billing_email").show();
                $('.paymentMethod').each(function() {
                    if($(this).attr('value') == "Klarna")
                    {
                        $(this).prop( "disabled", true );
                        $(this).prop( "checked", false );
                    }
                    else
                    {
                        $(this).prop( "disabled", false );
                    }
                });
                $("#klarna-checkout-container").hide();
                $('.paymentMethod:first').prop( "checked", true );
                $("#submitPay").show();
            }

            function onlyKlarnaPayment()
            {
                $("#billing_email").hide();
                $('.addressDetails').hide();
                $('#billing_name').hide();

                var hasKlarna = false;

                $('.paymentMethod').each(function() {

                    if($(this).attr('value') != "Klarna")
                    {
                        $(this).prop( "disabled", true );
                        $(this).prop( "checked", false );
                    }
                    else {
                        $(this).prop( "disabled", false );
                        $(this).prop( "checked", true );
                        hasKlarna = true;
                    }

                });
                if(!hasKlarna)
                {
                    $('.paymentMethod').each(function() {
                        $(this).prop( "disabled", false );
                    });
                }

                $("#klarna-checkout-container").show();
                $("#submitPay").hide();
            }

            //onlyKlarnaPayment();

            stripePayment = true;
            $('#billing_name').hide();
            $('.addressDetails').hide();
            $("#billing_email").hide();
            $("#klarna-checkout-container").hide();
            $("#stripePaymentDetails").show();
            $("#submitPay").show();

            // Handle form submission.

            // Submit the form with the token ID.
    function stripeProcess() {
        stripe.createToken(cardElement).then((token) => {
    stripe.createSource(cardElement).then((source) => {
        stripe.createPaymentMethod('card', cardElement, {
            billing_details: {
                name: "karthika"
            }
        }).then((paymentMethod) => {
            console.log("Payment Method:", paymentMethod);
            $.ajax({
                type: "GET",
                //url: "api/booking/products/"+bookingId,
                url: "/api/paymentintent/" + paymentMethod.paymentMethod.id,
                data: {
                    amount: totalPrice ,
                    currency: currency,
                    description: "Sample booking"
                },
                success: function (response) {
                    console.log("Response:::", response);
                    var payment_intent_client_secret = response.intent.client_secret;
                    stripe.handleCardPayment(payment_intent_client_secret, {
                        payment_method: paymentMethod.paymentMethod.id, // if you have a clientMethod
                    }).then((b) => {
                        console.log("Auth success::", b);
                        window.authRes = b;
                        var form = document.getElementById('billing-form');
                        var hiddenInput = document.createElement('input');
                        hiddenInput.setAttribute('type', 'hidden');
                        hiddenInput.setAttribute('name', 'stripe-token');
                        hiddenInput.setAttribute('value', token.token.id);
                        form.appendChild(hiddenInput);
                        var hiddenInput2 = document.createElement('input');
                        hiddenInput2.setAttribute('type', 'hidden');
                        hiddenInput2.setAttribute('name', 'client-secret');
                        if (!b.error) {
                            hiddenInput2.setAttribute('value', payment_intent_client_secret);
                        } else {
                            hiddenInput2.setAttribute('value', '');
                        }
                        form.appendChild(hiddenInput2);

                        form.submit();

                    }).catch((e) => {
                        console.log("Auth error::", e);
                    });

                },
                error: function (error) {
                    console.log("eror:::", error);
                },
                dataType: "json"
            });
        }).catch();
    }).catch();
}).catch();
    }
    function stripeTokenHandler(token) {
        return false;
        // Sample Comment
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('billing-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripe-token');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }
            $("#submitPay").click(function(evt){
                evt.preventDefault();
                evt.currentTarget.disabled = true;
                var submitPayValue = evt.currentTarget.value;
                evt.currentTarget.value = "One Moment";
                stripeProcess();
            });
            

            $("#customerTypeCompany").click(function(){
                noKlarnaPayment();
                $('.addressDetails').show();
                $('#billing_name').show();
                $("#submitPay").show();
            });

            $("#customerTypeIndividual").click(function(){
                onlyKlarnaPayment();
                $('.addressDetails').hide();
                $('#billing_name').hide();
                $("#submitPay").hide();
            });

            $(".paymentMethods input").click(function(evt){

                stripePayment = false;
                klarnaPayment = false;

                if($(evt.target).attr('value') == "Klarna" || $(evt.target).attr('value') == "Stripe")
                {
                    $("#billing_email").hide();
                }
                else
                {
                    $("#billing_email").show();
                }

                if($(evt.target).attr('value') == "Card" || $(evt.target).attr('value') == "Stripe")
                {
                    stripePayment = true;
                    $("#klarna-checkout-container").hide();
                    $("#stripePaymentDetails").show();
                    $("#submitPay").click(function(evt){

                        if($('#paymentMethodStripe').is(':checked') === true)
                        {
                            evt.preventDefault();

                            StripeBilling.init($('#billing-form'));
                            StripeBilling.sendToken(evt);
                        }
                    });
                }
                else if($(evt.target).attr('value') == "Klarna")
                {
                    klarnaPayment = true;
                    $("#stripePaymentDetails").hide();

                    if($("#cancellationTerms").is(":checked"))
                    {
                        $("#klarna-checkout-container").show();
                    }
                    $("#submitPay").hide();
                }
                else {
                    $("#stripePaymentDetails").hide();
                    $("#klarna-checkout-container").hide();
                    $("#submitPay").show(600);
                }
            });

            /*$("#cancellationTerms").click(function(evt){

                if($(evt.target).is(':checked') && klarnaPayment)
                {
                    $("#klarna-checkout-container").show();
                }

            });*/
        });


</script>
@endsection